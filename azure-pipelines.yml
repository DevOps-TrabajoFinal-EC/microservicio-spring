jobs:
- job:
  pool:
    vmImage: ubuntu-latest
  displayName: Build

  steps: 
  - task: Gradle@3
    inputs:
      gradleWrapperFile: 'gradlew'
      tasks: 'build'
      publishJUnitResults: true
      testResultsFiles: '**/TEST-*.xml'
      javaHomeOption: 'JDKVersion'
      sonarQubeRunAnalysis: false
      spotBugsAnalysis: false
    displayName: Build

  #- task: SonarCloudPrepare@1
  #  inputs:
  #    SonarCloud: 'SonarCloudEC'
  #    organization: 'devops-trabajofinal-ec'
  #    projectKey: 'DevOps-TrabajoFinal-EC_microservicio-spring'
  #    projectName: 'microservicio-spring'
  #  displayName: 'SonarCloud Prepare'

  #- task: Gradle@3
  #  inputs:
  #    gradleWrapperFile: 'gradlew'
  #    tasks: 'sonar'
  #    publishJUnitResults: true
  #    testResultsFiles: '**/TEST-*.xml'
  #    codeCoverageToolOption: 'JaCoCo'
  #    codeCoverageClassFilesDirectories: 'build/classes/main/'
  #    codeCoverageGradle5xOrHigher: false
  #    javaHomeOption: 'JDKVersion'
  #    sonarQubeRunAnalysis: true
  #    sqGradlePluginVersionChoice: 'specify'
  #    sonarQubeGradlePluginVersion: '3.3'
  #    spotBugsAnalysis: false
  #  displayName: 'SonarCloud Analysis'

  - task: Docker@2
    inputs:
      containerRegistry: 'DockerHub'
      command: 'login'
    displayName: 'Docker Login'
  - task: Docker@2
    inputs:
      containerRegistry: 'DockerHub'
      repository: 'nsg2020/microservicio-spring'
      command: 'build'
      Dockerfile: '**/Dockerfile'
      tags: |
        latest
        $(Build.BuildId)
    displayName: 'Docker Build'

  - task: Docker@2
    inputs:
      containerRegistry: 'DockerHub'
      repository: 'nsg2020/microservicio-spring'
      command: 'push'
      tags: |
        latest
        $(Build.BuildId)
    displayName: 'Docker Push'

- job: 
  pool: 'localk8s'
  steps:
  - task: Kubernetes@1
    inputs:
      connectionType: 'None'
      command: 'apply'
      arguments: '-f deployment-app.yaml'
    displayName: 'Deployment k8s local'
  - script: kubectl port-forward deploy/microservicio-spring-deployment 8080:8080